---
swagger: "2.0"
info:
  description: "WALAT-NEXT"
  version: "2.0.0"
  title: "walat"
basePath: "/v2"
schemes:
- "http"
consumes:
- "application/json"
- "application/vnd.api+json"
produces:
- "application/json"
- "application/vnd.api+json"
paths:
  /actions:
    get:
      tags:
      - "Backend"
      description: "Returns information about actions at a given page."
      operationId: "actionsGET"
      parameters: []
      responses:
        200:
          description: "An array of actions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Action"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    post:
      tags:
      - "Backend"
      description: "Adds a new action to a given page."
      operationId: "actionsPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Action with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/NAction"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /actions/{id}:
    get:
      tags:
      - "Backend"
      description: "Returns information about the action of a specified ID."
      operationId: "actionsIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of action"
        required: true
        type: "string"
      responses:
        200:
          description: "A action"
          schema:
            $ref: "#/definitions/Action"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    delete:
      tags:
      - "Backend"
      description: "Deletes a action."
      operationId: "actionsIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of action"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
    patch:
      tags:
      - "Backend"
      description: "Edits a action."
      operationId: "actionsIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of action"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Action content to be updated"
        required: true
        schema:
          $ref: "#/definitions/Action"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /exercises:
    get:
      tags:
      - "Backend"
      description: "Returns information about exercises at a given lesson."
      operationId: "exercisesGET"
      parameters:
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "An array of exercises"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Exercise"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    post:
      tags:
      - "Backend"
      description: "Adds a new exercise to a given lesson."
      operationId: "exercisesPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Exercise with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/NExercise"
      responses:
        200:
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /exercises/{id}:
    get:
      tags:
      - "Backend"
      description: "Returns information about the exercise of a specified ID."
      operationId: "exercisesIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exercise"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "An exercise"
          schema:
            $ref: "#/definitions/Exercise"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    delete:
      tags:
      - "Backend"
      description: "Deletes an exercise."
      operationId: "exercisesIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exercise"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
    patch:
      tags:
      - "Backend"
      description: "Edits an exercise."
      operationId: "exercisesIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exercise"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Exercise content to be updated"
        required: true
        schema:
          $ref: "#/definitions/Exercise"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /exercises/{id}/reorder:
    post:
      tags:
      - "Backend"
      description: "Reorders an exercise."
      operationId: "exercisesIdReorderPOST"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of exercise"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "List of ordered page IDs"
        required: true
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int32"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /klasses:
    get:
      tags:
      - "Backend"
      description: "Returns information about klasses."
      operationId: "klassesGET"
      parameters:
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "An array of klasses"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Klass"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    post:
      tags:
      - "Backend"
      description: "Adds a new klass."
      operationId: "klassesPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Klass with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/NKlass"
      responses:
        200:
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /klasses/{id}:
    get:
      tags:
      - "Backend"
      description: "Returns information about the klass of a specified ID."
      operationId: "klassesIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of klass"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "A klass"
          schema:
            $ref: "#/definitions/Klass"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    delete:
      tags:
      - "Backend"
      description: "Deletes a klass."
      operationId: "klassesIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of klass"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
    patch:
      tags:
      - "Backend"
      description: "Edits a klass."
      operationId: "klassesIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of klass"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Klass content to be updated"
        required: true
        schema:
          $ref: "#/definitions/Klass"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /lessons:
    get:
      tags:
      - "Backend"
      description: "Returns information about lessons."
      operationId: "lessonsGET"
      parameters:
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "An array of lessons"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Lesson"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    post:
      tags:
      - "Backend"
      description: "Adds a new lesson."
      operationId: "lessonsPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Lesson with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/NLesson"
      responses:
        200:
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /lessons/{id}:
    get:
      tags:
      - "Backend"
      description: "Returns information about the lesson of a specified ID."
      operationId: "lessonsIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of lesson"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "A lesson"
          schema:
            $ref: "#/definitions/Lesson"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    delete:
      tags:
      - "Backend"
      description: "Deletes a lesson."
      operationId: "lessonsIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of lesson"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
    patch:
      tags:
      - "Backend"
      description: "Edits a lesson."
      operationId: "lessonsIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of lesson"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Lesson content to be updated"
        required: true
        schema:
          $ref: "#/definitions/Lesson"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /lessons/{id}/reorder:
    post:
      tags:
      - "Backend"
      description: "Reorders a lesson."
      operationId: "lessonsIdReorderPOST"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of lesson"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "List of ordered exercise IDs"
        required: true
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int32"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /pages:
    get:
      tags:
      - "Backend"
      description: "Returns information about pages at a given exercise."
      operationId: "pagesGET"
      parameters:
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "An array of pages"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Page"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    post:
      tags:
      - "Backend"
      description: "Adds a new page to a given exercise."
      operationId: "pagesPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Page with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/NPage"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
  /pages/{id}:
    get:
      tags:
      - "Backend"
      description: "Returns information about the page of a specified ID."
      operationId: "pagesIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of page"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Used to include nested records"
        required: false
        type: "string"
      responses:
        200:
          description: "A page"
          schema:
            $ref: "#/definitions/Page"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backend"
    delete:
      tags:
      - "Backend"
      description: "Deletes a page."
      operationId: "pagesIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of page"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
    patch:
      tags:
      - "Backend"
      description: "Edits a page."
      operationId: "pagesIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of page"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page content to be updated"
        required: true
        schema:
          $ref: "#/definitions/Page"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Backend"
definitions:
  Action:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ID of action"
      page:
        type: "string"
        description: "Parent page"
      type:
        type: "string"
        description: "Type of action"
      uuid:
        type: "string"
        description: "UUID of action"
      value:
        type: "object"
        description: "Value of action"
        properties: {}
    example:
      id: "id"
      page: "page"
      type: "type"
      uuid: "uuid"
      value: "{}"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      fields:
        type: "string"
      message:
        type: "string"
  Exercise:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ID of exercise"
      lesson:
        type: "string"
        description: "Parent lesson"
      name:
        type: "string"
        description: "Name of exercise"
      uuid:
        type: "string"
        description: "UUID of exercise"
    example:
      lesson: "lesson"
      name: "name"
      id: "id"
      uuid: "uuid"
  Klass:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ID of class"
      name:
        type: "string"
        description: "Name of class"
      uuid:
        type: "string"
        description: "UUID of class"
    example:
      name: "name"
      id: "id"
      uuid: "uuid"
  Lesson:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ID of lesson"
      klass:
        type: "string"
        description: "Parent class"
      name:
        type: "string"
        description: "Name of lesson"
      uuid:
        type: "string"
        description: "UUID of lesson"
    example:
      klass: "klass"
      name: "name"
      id: "id"
      uuid: "uuid"
  NAction:
    type: "object"
    properties:
      page:
        type: "string"
        description: "Parent page"
      type:
        type: "string"
        description: "Type of action"
      uuid:
        type: "string"
        description: "UUID of action"
      value:
        type: "object"
        description: "Value of action"
        properties: {}
    example:
      page: "page"
      type: "type"
      uuid: "uuid"
      value: "{}"
  NExercise:
    type: "object"
    properties:
      lesson:
        type: "string"
        description: "Parent lesson"
      name:
        type: "string"
        description: "Name of exercise"
      uuid:
        type: "string"
        description: "UUID of exercise"
    example:
      lesson: "lesson"
      name: "name"
      uuid: "uuid"
  NKlass:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of class"
      uuid:
        type: "string"
        description: "UUID of class"
    example:
      name: "name"
      uuid: "uuid"
  NLesson:
    type: "object"
    properties:
      klass:
        type: "string"
        description: "Parent class"
      name:
        type: "string"
        description: "Name of lesson"
      uuid:
        type: "string"
        description: "UUID of lesson"
    example:
      klass: "klass"
      name: "name"
      uuid: "uuid"
  NPage:
    type: "object"
    properties:
      exercise:
        type: "string"
        description: "Parent exercise"
      name:
        type: "string"
        description: "Name of page"
      uuid:
        type: "string"
        description: "UUID of page"
    example:
      name: "name"
      exercise: "exercise"
      uuid: "uuid"
  Page:
    type: "object"
    properties:
      exercise:
        type: "string"
        description: "Parent exercise"
      id:
        type: "string"
        description: "ID of page"
      name:
        type: "string"
        description: "Name of page"
      uuid:
        type: "string"
        description: "UUID of page"
    example:
      name: "name"
      exercise: "exercise"
      id: "id"
      uuid: "uuid"
